@model List<int>

	<br />
	<br />
	<br />

	<div class="container">

		<div class="row">
			<aside class="col-md-4 sidebar sidebar-left">


				<div class="col-xs-12 text-center">
					<h2>My Charts</h2>

					@foreach (var id in Model)
					{
						<div class="row widget">
							<div class="col-xs-12">
								<h4>16.04.2016</h4>
								<p>
									<img src="https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcR9-EzylOIy6ogOcSyrwEHvtVcGBA1xir_looIX1Mv1KdF-27Us" width="100" height="100">
								</p>
							</div>
						</div>
					}
				</div>


				<div class="col-xs-12 text-center">
					<button class="btn btn-default" onclick=" addChart() ">Add chart</button>
				</div>

			</aside>

			<article class="col-md-8 maincontent" id="current_chart"></article>

		</div>
	</div>

	<script type="text/javascript" src="https://www.google.com/jsapi"></script>
	<script>
		google.load('visualization', '1.0', { packages: ['charteditor'] });
		var wrapper = new Object();
		var chartId = 1;

		function drawVisualization() {
			wrapper = new google.visualization.ChartWrapper({
				chartType: 'LineChart',
				dataTable: [],
				containerId: 'editorChart'
			});

		}

		function addChart() {
			$.get('/Profile/CreateChart', { chartId: chartId })
				.done(function (data) {
					$('#current_chart').html(data);
					drawVisualization();
				});
		}

		function parseString(str, withQuotes) {
			var find = '\'';
			var pattern = new RegExp(find, 'g');
			str = str.replace(pattern, '\"');
			var re = /(?:")([^"]+)(?:")|([^\s"]+)(?=\s+|$)/g;
			var res = [], arr = null;
			while (arr = re.exec(str)) {
				if (withQuotes)
					res.push(arr[0]);
				else
					res.push(arr[1] ? arr[1] : arr[0]);
			}
			return res;
		}

		Array.prototype.clean = function (deleteValue) {
			for (var i = 0; i < this.length; i++) {
				if (this[i] == deleteValue) {
					this.splice(i, 1);
					i--;
				}
			}
			return this;
		};

		function parseData() {
			var data = $('#chartData').val();
			var lines = data.split('\n').clean("");
			var chartData = [];
			for (var i = 0; i < lines.length; i++) {
				var line = [];
				var params = [];
				var items = parseString(lines[i]);
				for (var j = 0; j < items.length; j++) {
					var f = parseFloat(items[j]);
					if (f)
						params.push(f);
					else {
						params.push(items[j]);
					}
				}
				chartData.push(line.concat(params));
			}
			wrapper.setDataTable(chartData);
		}

		function render() {
			var height = $('#chartHeight').val();
			var width = $('#chartWidth').val();

			$('#editorChart').width(width);
			$('#editorChart').height(height);

			parseData();
			wrapper.draw();

			$('#chartSave').show();
		}

		function save() {
			$.ajax({
				type: "POST",
				url: '@Url.Action("SaveChart", "Profile")',
				data: JSON.stringify({ data: $('#chartData').val() }),
				dataType: "json",
				contentType: "application/json",
				success: function (data) {
					location.reload();
				}
			});
		}
	</script>
